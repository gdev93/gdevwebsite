"""
Django settings for gdevwebsite project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from frontend.apps import FrontendConfig
from api.apps import ApiConfig

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR points to the project root directory (where manage.py is located)
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY is used for cryptographic signing (sessions, cookies, CSRF protection)
# This should be changed and kept secret in production environments
SECRET_KEY = os.environ.setdefault('SECRET_KEY', 'kjsdeehfgliswkbshsgkuhsdgvkisfdgkisdfjugsdlfku1213456789')

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG=True shows detailed error pages and allows Django to serve static files
# Set to False in production for security and performance
DEBUG = os.environ.setdefault('DEBUG', 'True').lower() == 'true'

# ALLOWED_HOSTS defines which host/domain names Django can serve
# Empty list means only localhost is allowed (suitable for development)
# In production, add your domain names like ['yourdomain.com', 'www.yourdomain.com']
ALLOWED_HOSTS = os.environ.setdefault('ALLOWED_HOSTS', '127.0.0.1,0.0.0.0,giacomozanotti.dev,localhost').split(',')

# Application definition

# INSTALLED_APPS lists all Django applications that are activated in this project
# These are the core apps needed for basic functionality
INSTALLED_APPS = [
    'django.contrib.contenttypes',  # Content type system for generic relations
    'django.contrib.staticfiles',   # Static file serving (CSS, JS, images)
    FrontendConfig.name,
    ApiConfig.name,

]

# MIDDLEWARE defines the middleware stack that processes requests/responses
# Order matters - middleware is executed top-to-bottom for requests, bottom-to-top for responses
MIDDLEWARE = [
    'django.middleware.common.CommonMiddleware',      # Common functionality like URL rewriting
    'django.middleware.csrf.CsrfViewMiddleware',      # Cross-Site Request Forgery protection
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Clickjacking protection via X-Frame-Options
]

# ROOT_URLCONF points to the main URL configuration module
# This is where Django starts looking for URL patterns
ROOT_URLCONF = 'gdevwebsite.urls'

# TEMPLATES configuration for template engines
TEMPLATES = [
    {
        # BACKEND specifies which template engine to use
        'BACKEND': 'django.template.backends.django.DjangoTemplates',

        # DIRS lists directories where Django should look for templates
        # BASE_DIR / 'templates' points to a templates folder in your project root
        'DIRS': [BASE_DIR / 'frontend/templates'],

        # APP_DIRS=True tells Django to look for templates in each app's templates directory
        'APP_DIRS': True,

        # OPTIONS contains additional configuration for the template engine
        'OPTIONS': {
            # Context processors are functions that add variables to every template context automatically
            'context_processors': [
                # Adds 'request' object to all template contexts (access to request.user, request.GET, etc.)
                'django.template.context_processors.request',
            ],
        },
    },
]

# WSGI_APPLICATION points to the WSGI application object
# This is used by WSGI servers to serve your Django application
WSGI_APPLICATION = 'gdevwebsite.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

# LANGUAGE_CODE sets the default language for the project
LANGUAGE_CODE = 'en-us'

# TIME_ZONE sets the default timezone for the project
# 'UTC' is recommended for most applications
TIME_ZONE = os.environ.setdefault('TIME_ZONE', 'UTC')

# USE_I18N enables Django's internationalization system
# Set to False if you don't need multiple languages
USE_I18N = True

# USE_TZ enables timezone support in Django
# When True, Django stores datetime information in UTC internally
USE_TZ = True

CSRF_TRUSTED_ORIGINS=os.environ.setdefault('CSRF_TRUSTED_ORIGINS', 'http://localhost:8000').split(',')
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# STATIC_URL is the URL prefix for static files
# Static files will be served from /static/ URL path
STATIC_URL = 'static/'

# STATIC_ROOT is the absolute path to the directory where static files are collected
# This is required when using collectstatic command (especially in production/Docker)
STATIC_ROOT = 'staticfiles/'
